// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpckeystore.proto

package grpckeystore

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GenerateKeyReq struct {
	Gun                  string   `protobuf:"bytes,1,opt,name=Gun,proto3" json:"Gun,omitempty"`
	Role                 string   `protobuf:"bytes,2,opt,name=Role,proto3" json:"Role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateKeyReq) Reset()         { *m = GenerateKeyReq{} }
func (m *GenerateKeyReq) String() string { return proto.CompactTextString(m) }
func (*GenerateKeyReq) ProtoMessage()    {}
func (*GenerateKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd18bd41430f085c, []int{0}
}

func (m *GenerateKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateKeyReq.Unmarshal(m, b)
}
func (m *GenerateKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateKeyReq.Marshal(b, m, deterministic)
}
func (m *GenerateKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateKeyReq.Merge(m, src)
}
func (m *GenerateKeyReq) XXX_Size() int {
	return xxx_messageInfo_GenerateKeyReq.Size(m)
}
func (m *GenerateKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateKeyReq proto.InternalMessageInfo

func (m *GenerateKeyReq) GetGun() string {
	if m != nil {
		return m.Gun
	}
	return ""
}

func (m *GenerateKeyReq) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type GenerateKeyRsp struct {
	RemoteKeyId          string   `protobuf:"bytes,1,opt,name=RemoteKeyId,proto3" json:"RemoteKeyId,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,2,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	Algorithm            string   `protobuf:"bytes,3,opt,name=Algorithm,proto3" json:"Algorithm,omitempty"`
	SignatureAlgorithm   string   `protobuf:"bytes,4,opt,name=SignatureAlgorithm,proto3" json:"SignatureAlgorithm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateKeyRsp) Reset()         { *m = GenerateKeyRsp{} }
func (m *GenerateKeyRsp) String() string { return proto.CompactTextString(m) }
func (*GenerateKeyRsp) ProtoMessage()    {}
func (*GenerateKeyRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd18bd41430f085c, []int{1}
}

func (m *GenerateKeyRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateKeyRsp.Unmarshal(m, b)
}
func (m *GenerateKeyRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateKeyRsp.Marshal(b, m, deterministic)
}
func (m *GenerateKeyRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateKeyRsp.Merge(m, src)
}
func (m *GenerateKeyRsp) XXX_Size() int {
	return xxx_messageInfo_GenerateKeyRsp.Size(m)
}
func (m *GenerateKeyRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateKeyRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateKeyRsp proto.InternalMessageInfo

func (m *GenerateKeyRsp) GetRemoteKeyId() string {
	if m != nil {
		return m.RemoteKeyId
	}
	return ""
}

func (m *GenerateKeyRsp) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *GenerateKeyRsp) GetAlgorithm() string {
	if m != nil {
		return m.Algorithm
	}
	return ""
}

func (m *GenerateKeyRsp) GetSignatureAlgorithm() string {
	if m != nil {
		return m.SignatureAlgorithm
	}
	return ""
}

type AssociateKeyReq struct {
	RemoteKeyId          string   `protobuf:"bytes,1,opt,name=RemoteKeyId,proto3" json:"RemoteKeyId,omitempty"`
	KeyId                string   `protobuf:"bytes,2,opt,name=KeyId,proto3" json:"KeyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssociateKeyReq) Reset()         { *m = AssociateKeyReq{} }
func (m *AssociateKeyReq) String() string { return proto.CompactTextString(m) }
func (*AssociateKeyReq) ProtoMessage()    {}
func (*AssociateKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd18bd41430f085c, []int{2}
}

func (m *AssociateKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssociateKeyReq.Unmarshal(m, b)
}
func (m *AssociateKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssociateKeyReq.Marshal(b, m, deterministic)
}
func (m *AssociateKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssociateKeyReq.Merge(m, src)
}
func (m *AssociateKeyReq) XXX_Size() int {
	return xxx_messageInfo_AssociateKeyReq.Size(m)
}
func (m *AssociateKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AssociateKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_AssociateKeyReq proto.InternalMessageInfo

func (m *AssociateKeyReq) GetRemoteKeyId() string {
	if m != nil {
		return m.RemoteKeyId
	}
	return ""
}

func (m *AssociateKeyReq) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

type AssociateKeyRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssociateKeyRsp) Reset()         { *m = AssociateKeyRsp{} }
func (m *AssociateKeyRsp) String() string { return proto.CompactTextString(m) }
func (*AssociateKeyRsp) ProtoMessage()    {}
func (*AssociateKeyRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd18bd41430f085c, []int{3}
}

func (m *AssociateKeyRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssociateKeyRsp.Unmarshal(m, b)
}
func (m *AssociateKeyRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssociateKeyRsp.Marshal(b, m, deterministic)
}
func (m *AssociateKeyRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssociateKeyRsp.Merge(m, src)
}
func (m *AssociateKeyRsp) XXX_Size() int {
	return xxx_messageInfo_AssociateKeyRsp.Size(m)
}
func (m *AssociateKeyRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_AssociateKeyRsp.DiscardUnknown(m)
}

var xxx_messageInfo_AssociateKeyRsp proto.InternalMessageInfo

type AddKeyReq struct {
	KeyId                string   `protobuf:"bytes,1,opt,name=KeyId,proto3" json:"KeyId,omitempty"`
	Gun                  string   `protobuf:"bytes,2,opt,name=Gun,proto3" json:"Gun,omitempty"`
	Role                 string   `protobuf:"bytes,3,opt,name=Role,proto3" json:"Role,omitempty"`
	Algorithm            string   `protobuf:"bytes,4,opt,name=Algorithm,proto3" json:"Algorithm,omitempty"`
	SignatureAlgorithm   string   `protobuf:"bytes,5,opt,name=SignatureAlgorithm,proto3" json:"SignatureAlgorithm,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,6,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	PrivateKey           []byte   `protobuf:"bytes,7,opt,name=PrivateKey,proto3" json:"PrivateKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddKeyReq) Reset()         { *m = AddKeyReq{} }
func (m *AddKeyReq) String() string { return proto.CompactTextString(m) }
func (*AddKeyReq) ProtoMessage()    {}
func (*AddKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd18bd41430f085c, []int{4}
}

func (m *AddKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddKeyReq.Unmarshal(m, b)
}
func (m *AddKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddKeyReq.Marshal(b, m, deterministic)
}
func (m *AddKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddKeyReq.Merge(m, src)
}
func (m *AddKeyReq) XXX_Size() int {
	return xxx_messageInfo_AddKeyReq.Size(m)
}
func (m *AddKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddKeyReq proto.InternalMessageInfo

func (m *AddKeyReq) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *AddKeyReq) GetGun() string {
	if m != nil {
		return m.Gun
	}
	return ""
}

func (m *AddKeyReq) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *AddKeyReq) GetAlgorithm() string {
	if m != nil {
		return m.Algorithm
	}
	return ""
}

func (m *AddKeyReq) GetSignatureAlgorithm() string {
	if m != nil {
		return m.SignatureAlgorithm
	}
	return ""
}

func (m *AddKeyReq) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *AddKeyReq) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

type AddKeyRsp struct {
	RemoteKeyId          string   `protobuf:"bytes,1,opt,name=RemoteKeyId,proto3" json:"RemoteKeyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddKeyRsp) Reset()         { *m = AddKeyRsp{} }
func (m *AddKeyRsp) String() string { return proto.CompactTextString(m) }
func (*AddKeyRsp) ProtoMessage()    {}
func (*AddKeyRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd18bd41430f085c, []int{5}
}

func (m *AddKeyRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddKeyRsp.Unmarshal(m, b)
}
func (m *AddKeyRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddKeyRsp.Marshal(b, m, deterministic)
}
func (m *AddKeyRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddKeyRsp.Merge(m, src)
}
func (m *AddKeyRsp) XXX_Size() int {
	return xxx_messageInfo_AddKeyRsp.Size(m)
}
func (m *AddKeyRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddKeyRsp.DiscardUnknown(m)
}

var xxx_messageInfo_AddKeyRsp proto.InternalMessageInfo

func (m *AddKeyRsp) GetRemoteKeyId() string {
	if m != nil {
		return m.RemoteKeyId
	}
	return ""
}

type GetKeyReq struct {
	KeyId                string   `protobuf:"bytes,1,opt,name=KeyId,proto3" json:"KeyId,omitempty"`
	RemoteKeyId          string   `protobuf:"bytes,2,opt,name=RemoteKeyId,proto3" json:"RemoteKeyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetKeyReq) Reset()         { *m = GetKeyReq{} }
func (m *GetKeyReq) String() string { return proto.CompactTextString(m) }
func (*GetKeyReq) ProtoMessage()    {}
func (*GetKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd18bd41430f085c, []int{6}
}

func (m *GetKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetKeyReq.Unmarshal(m, b)
}
func (m *GetKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetKeyReq.Marshal(b, m, deterministic)
}
func (m *GetKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetKeyReq.Merge(m, src)
}
func (m *GetKeyReq) XXX_Size() int {
	return xxx_messageInfo_GetKeyReq.Size(m)
}
func (m *GetKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetKeyReq proto.InternalMessageInfo

func (m *GetKeyReq) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *GetKeyReq) GetRemoteKeyId() string {
	if m != nil {
		return m.RemoteKeyId
	}
	return ""
}

type GetKeyRsp struct {
	Role                 string   `protobuf:"bytes,1,opt,name=Role,proto3" json:"Role,omitempty"`
	Algorithm            string   `protobuf:"bytes,2,opt,name=Algorithm,proto3" json:"Algorithm,omitempty"`
	SignatureAlgorithm   string   `protobuf:"bytes,3,opt,name=SignatureAlgorithm,proto3" json:"SignatureAlgorithm,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,4,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetKeyRsp) Reset()         { *m = GetKeyRsp{} }
func (m *GetKeyRsp) String() string { return proto.CompactTextString(m) }
func (*GetKeyRsp) ProtoMessage()    {}
func (*GetKeyRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd18bd41430f085c, []int{7}
}

func (m *GetKeyRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetKeyRsp.Unmarshal(m, b)
}
func (m *GetKeyRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetKeyRsp.Marshal(b, m, deterministic)
}
func (m *GetKeyRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetKeyRsp.Merge(m, src)
}
func (m *GetKeyRsp) XXX_Size() int {
	return xxx_messageInfo_GetKeyRsp.Size(m)
}
func (m *GetKeyRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetKeyRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetKeyRsp proto.InternalMessageInfo

func (m *GetKeyRsp) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *GetKeyRsp) GetAlgorithm() string {
	if m != nil {
		return m.Algorithm
	}
	return ""
}

func (m *GetKeyRsp) GetSignatureAlgorithm() string {
	if m != nil {
		return m.SignatureAlgorithm
	}
	return ""
}

func (m *GetKeyRsp) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type ListKeysReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListKeysReq) Reset()         { *m = ListKeysReq{} }
func (m *ListKeysReq) String() string { return proto.CompactTextString(m) }
func (*ListKeysReq) ProtoMessage()    {}
func (*ListKeysReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd18bd41430f085c, []int{8}
}

func (m *ListKeysReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListKeysReq.Unmarshal(m, b)
}
func (m *ListKeysReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListKeysReq.Marshal(b, m, deterministic)
}
func (m *ListKeysReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListKeysReq.Merge(m, src)
}
func (m *ListKeysReq) XXX_Size() int {
	return xxx_messageInfo_ListKeysReq.Size(m)
}
func (m *ListKeysReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListKeysReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListKeysReq proto.InternalMessageInfo

type ListKeysRsp struct {
	KeyData              []*ListKeysRsp_KeyInfo `protobuf:"bytes,1,rep,name=KeyData,proto3" json:"KeyData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListKeysRsp) Reset()         { *m = ListKeysRsp{} }
func (m *ListKeysRsp) String() string { return proto.CompactTextString(m) }
func (*ListKeysRsp) ProtoMessage()    {}
func (*ListKeysRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd18bd41430f085c, []int{9}
}

func (m *ListKeysRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListKeysRsp.Unmarshal(m, b)
}
func (m *ListKeysRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListKeysRsp.Marshal(b, m, deterministic)
}
func (m *ListKeysRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListKeysRsp.Merge(m, src)
}
func (m *ListKeysRsp) XXX_Size() int {
	return xxx_messageInfo_ListKeysRsp.Size(m)
}
func (m *ListKeysRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListKeysRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ListKeysRsp proto.InternalMessageInfo

func (m *ListKeysRsp) GetKeyData() []*ListKeysRsp_KeyInfo {
	if m != nil {
		return m.KeyData
	}
	return nil
}

type ListKeysRsp_KeyInfo struct {
	KeyId                string   `protobuf:"bytes,1,opt,name=KeyId,proto3" json:"KeyId,omitempty"`
	RemoteKeyId          string   `protobuf:"bytes,2,opt,name=RemoteKeyId,proto3" json:"RemoteKeyId,omitempty"`
	Gun                  string   `protobuf:"bytes,3,opt,name=Gun,proto3" json:"Gun,omitempty"`
	Role                 string   `protobuf:"bytes,4,opt,name=Role,proto3" json:"Role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListKeysRsp_KeyInfo) Reset()         { *m = ListKeysRsp_KeyInfo{} }
func (m *ListKeysRsp_KeyInfo) String() string { return proto.CompactTextString(m) }
func (*ListKeysRsp_KeyInfo) ProtoMessage()    {}
func (*ListKeysRsp_KeyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd18bd41430f085c, []int{9, 0}
}

func (m *ListKeysRsp_KeyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListKeysRsp_KeyInfo.Unmarshal(m, b)
}
func (m *ListKeysRsp_KeyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListKeysRsp_KeyInfo.Marshal(b, m, deterministic)
}
func (m *ListKeysRsp_KeyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListKeysRsp_KeyInfo.Merge(m, src)
}
func (m *ListKeysRsp_KeyInfo) XXX_Size() int {
	return xxx_messageInfo_ListKeysRsp_KeyInfo.Size(m)
}
func (m *ListKeysRsp_KeyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ListKeysRsp_KeyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ListKeysRsp_KeyInfo proto.InternalMessageInfo

func (m *ListKeysRsp_KeyInfo) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *ListKeysRsp_KeyInfo) GetRemoteKeyId() string {
	if m != nil {
		return m.RemoteKeyId
	}
	return ""
}

func (m *ListKeysRsp_KeyInfo) GetGun() string {
	if m != nil {
		return m.Gun
	}
	return ""
}

func (m *ListKeysRsp_KeyInfo) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type RemoveKeyReq struct {
	KeyId                string   `protobuf:"bytes,1,opt,name=KeyId,proto3" json:"KeyId,omitempty"`
	RemoteKeyId          string   `protobuf:"bytes,2,opt,name=RemoteKeyId,proto3" json:"RemoteKeyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveKeyReq) Reset()         { *m = RemoveKeyReq{} }
func (m *RemoveKeyReq) String() string { return proto.CompactTextString(m) }
func (*RemoveKeyReq) ProtoMessage()    {}
func (*RemoveKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd18bd41430f085c, []int{10}
}

func (m *RemoveKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveKeyReq.Unmarshal(m, b)
}
func (m *RemoveKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveKeyReq.Marshal(b, m, deterministic)
}
func (m *RemoveKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveKeyReq.Merge(m, src)
}
func (m *RemoveKeyReq) XXX_Size() int {
	return xxx_messageInfo_RemoveKeyReq.Size(m)
}
func (m *RemoveKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveKeyReq proto.InternalMessageInfo

func (m *RemoveKeyReq) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *RemoveKeyReq) GetRemoteKeyId() string {
	if m != nil {
		return m.RemoteKeyId
	}
	return ""
}

type RemoveKeyRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveKeyRsp) Reset()         { *m = RemoveKeyRsp{} }
func (m *RemoveKeyRsp) String() string { return proto.CompactTextString(m) }
func (*RemoveKeyRsp) ProtoMessage()    {}
func (*RemoveKeyRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd18bd41430f085c, []int{11}
}

func (m *RemoveKeyRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveKeyRsp.Unmarshal(m, b)
}
func (m *RemoveKeyRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveKeyRsp.Marshal(b, m, deterministic)
}
func (m *RemoveKeyRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveKeyRsp.Merge(m, src)
}
func (m *RemoveKeyRsp) XXX_Size() int {
	return xxx_messageInfo_RemoveKeyRsp.Size(m)
}
func (m *RemoveKeyRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveKeyRsp.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveKeyRsp proto.InternalMessageInfo

type SignReq struct {
	KeyId                string   `protobuf:"bytes,1,opt,name=KeyId,proto3" json:"KeyId,omitempty"`
	RemoteKeyId          string   `protobuf:"bytes,2,opt,name=RemoteKeyId,proto3" json:"RemoteKeyId,omitempty"`
	Message              []byte   `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignReq) Reset()         { *m = SignReq{} }
func (m *SignReq) String() string { return proto.CompactTextString(m) }
func (*SignReq) ProtoMessage()    {}
func (*SignReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd18bd41430f085c, []int{12}
}

func (m *SignReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignReq.Unmarshal(m, b)
}
func (m *SignReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignReq.Marshal(b, m, deterministic)
}
func (m *SignReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignReq.Merge(m, src)
}
func (m *SignReq) XXX_Size() int {
	return xxx_messageInfo_SignReq.Size(m)
}
func (m *SignReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SignReq.DiscardUnknown(m)
}

var xxx_messageInfo_SignReq proto.InternalMessageInfo

func (m *SignReq) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *SignReq) GetRemoteKeyId() string {
	if m != nil {
		return m.RemoteKeyId
	}
	return ""
}

func (m *SignReq) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

type SignRsp struct {
	Signature            []byte   `protobuf:"bytes,1,opt,name=Signature,proto3" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignRsp) Reset()         { *m = SignRsp{} }
func (m *SignRsp) String() string { return proto.CompactTextString(m) }
func (*SignRsp) ProtoMessage()    {}
func (*SignRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd18bd41430f085c, []int{13}
}

func (m *SignRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignRsp.Unmarshal(m, b)
}
func (m *SignRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignRsp.Marshal(b, m, deterministic)
}
func (m *SignRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignRsp.Merge(m, src)
}
func (m *SignRsp) XXX_Size() int {
	return xxx_messageInfo_SignRsp.Size(m)
}
func (m *SignRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_SignRsp.DiscardUnknown(m)
}

var xxx_messageInfo_SignRsp proto.InternalMessageInfo

func (m *SignRsp) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*GenerateKeyReq)(nil), "grpckeystore.GenerateKeyReq")
	proto.RegisterType((*GenerateKeyRsp)(nil), "grpckeystore.GenerateKeyRsp")
	proto.RegisterType((*AssociateKeyReq)(nil), "grpckeystore.AssociateKeyReq")
	proto.RegisterType((*AssociateKeyRsp)(nil), "grpckeystore.AssociateKeyRsp")
	proto.RegisterType((*AddKeyReq)(nil), "grpckeystore.AddKeyReq")
	proto.RegisterType((*AddKeyRsp)(nil), "grpckeystore.AddKeyRsp")
	proto.RegisterType((*GetKeyReq)(nil), "grpckeystore.GetKeyReq")
	proto.RegisterType((*GetKeyRsp)(nil), "grpckeystore.GetKeyRsp")
	proto.RegisterType((*ListKeysReq)(nil), "grpckeystore.ListKeysReq")
	proto.RegisterType((*ListKeysRsp)(nil), "grpckeystore.ListKeysRsp")
	proto.RegisterType((*ListKeysRsp_KeyInfo)(nil), "grpckeystore.ListKeysRsp.KeyInfo")
	proto.RegisterType((*RemoveKeyReq)(nil), "grpckeystore.RemoveKeyReq")
	proto.RegisterType((*RemoveKeyRsp)(nil), "grpckeystore.RemoveKeyRsp")
	proto.RegisterType((*SignReq)(nil), "grpckeystore.SignReq")
	proto.RegisterType((*SignRsp)(nil), "grpckeystore.SignRsp")
}

func init() { proto.RegisterFile("grpckeystore.proto", fileDescriptor_dd18bd41430f085c) }

var fileDescriptor_dd18bd41430f085c = []byte{
	// 550 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0xae, 0x63, 0x37, 0xf9, 0x3d, 0xf1, 0x5f, 0x60, 0x04, 0xc2, 0xb5, 0x0a, 0x0a, 0x7b, 0xa1,
	0x17, 0x72, 0x28, 0x52, 0x2f, 0x70, 0x09, 0x05, 0xa2, 0xca, 0x80, 0xa2, 0xed, 0x91, 0x93, 0x9b,
	0x2c, 0xc6, 0x22, 0x8d, 0x1d, 0xaf, 0x53, 0xc9, 0xcf, 0xc0, 0x3b, 0xf0, 0x12, 0x3c, 0x0a, 0x6f,
	0xc1, 0x53, 0xa0, 0x5d, 0xc7, 0xf6, 0xae, 0x13, 0x87, 0x88, 0xde, 0xbc, 0xf3, 0xcd, 0xf7, 0x65,
	0xe7, 0x9b, 0x99, 0x0d, 0x60, 0x98, 0x26, 0xd3, 0x6f, 0x2c, 0xe7, 0x59, 0x9c, 0xb2, 0x61, 0x92,
	0xc6, 0x59, 0x8c, 0x8e, 0x1a, 0x23, 0xe7, 0x70, 0x34, 0x66, 0x0b, 0x96, 0x06, 0x19, 0xf3, 0x59,
	0x4e, 0xd9, 0x12, 0xef, 0x83, 0x39, 0x5e, 0x2d, 0x5c, 0x63, 0x60, 0x9c, 0xda, 0x54, 0x7c, 0x22,
	0x82, 0x45, 0xe3, 0x39, 0x73, 0x3b, 0x32, 0x24, 0xbf, 0xc9, 0x0f, 0x43, 0x27, 0xf2, 0x04, 0x07,
	0xd0, 0xa7, 0xec, 0x26, 0x96, 0xe7, 0xcb, 0xd9, 0x5a, 0x40, 0x0d, 0xe1, 0x09, 0xd8, 0x93, 0xd5,
	0xf5, 0x3c, 0x9a, 0xfa, 0x2c, 0x97, 0x6a, 0x0e, 0xad, 0x03, 0x02, 0x1d, 0xcd, 0xc3, 0x38, 0x8d,
	0xb2, 0xaf, 0x37, 0xae, 0x29, 0xd9, 0x75, 0x00, 0x87, 0x80, 0x57, 0x51, 0xb8, 0x08, 0xb2, 0x55,
	0xca, 0xea, 0x34, 0x4b, 0xa6, 0x6d, 0x41, 0xc8, 0x25, 0xdc, 0x1b, 0x71, 0x1e, 0x4f, 0xa3, 0xba,
	0xb2, 0xbf, 0x5f, 0xf0, 0x21, 0x1c, 0x16, 0x58, 0x51, 0x6a, 0x71, 0x20, 0x0f, 0x1a, 0x52, 0x3c,
	0x21, 0xbf, 0x0c, 0xb0, 0x47, 0xb3, 0xd9, 0x5a, 0xb8, 0xa2, 0x19, 0x0a, 0xad, 0x34, 0xb2, 0xb3,
	0x69, 0xa4, 0x59, 0x1b, 0xa9, 0x57, 0x6d, 0xed, 0x57, 0xf5, 0x61, 0x5b, 0xd5, 0xba, 0xc3, 0xdd,
	0xa6, 0xc3, 0x4f, 0x01, 0x26, 0x69, 0x74, 0x5b, 0x94, 0xe1, 0xf6, 0x24, 0xac, 0x44, 0xc8, 0x8b,
	0xaa, 0xa8, 0x7d, 0xda, 0x49, 0x2e, 0xc0, 0x1e, 0xb3, 0x6c, 0xa7, 0x07, 0x0d, 0x91, 0xce, 0xa6,
	0xc8, 0x77, 0xa3, 0x52, 0xe1, 0x49, 0xe5, 0x90, 0xd1, 0xe6, 0x50, 0x67, 0x3f, 0x87, 0xcc, 0xfd,
	0x1c, 0xb2, 0x1a, 0x0e, 0x91, 0xff, 0xa1, 0xff, 0x21, 0xe2, 0xe2, 0x36, 0x9c, 0xb2, 0x25, 0xf9,
	0x69, 0x28, 0x67, 0x9e, 0xe0, 0x2b, 0xe8, 0xf9, 0x2c, 0x7f, 0x1b, 0x64, 0x81, 0x6b, 0x0c, 0xcc,
	0xd3, 0xfe, 0xd9, 0xb3, 0xa1, 0xb6, 0x61, 0x4a, 0xee, 0x50, 0x94, 0xb7, 0xf8, 0x12, 0xd3, 0x92,
	0xe1, 0x85, 0x92, 0x2c, 0x62, 0xff, 0x6a, 0x56, 0x39, 0x52, 0xe6, 0xe6, 0x48, 0x59, 0xca, 0x6e,
	0xbe, 0x07, 0x47, 0x90, 0x6e, 0xd9, 0x1d, 0x5b, 0x73, 0xa4, 0xea, 0xf0, 0x84, 0x7c, 0x86, 0x9e,
	0x30, 0xf4, 0x0e, 0x92, 0xe8, 0x42, 0xef, 0x23, 0xe3, 0x3c, 0x08, 0x8b, 0x25, 0x70, 0x68, 0x79,
	0x24, 0xcf, 0xd7, 0xe2, 0x3c, 0x11, 0x2d, 0xaa, 0x1a, 0x27, 0x7f, 0xc0, 0xa1, 0x75, 0xe0, 0xec,
	0xb7, 0x09, 0xce, 0x98, 0x4e, 0x2e, 0x7c, 0x96, 0x5f, 0x09, 0xd3, 0xd1, 0x87, 0xbe, 0xf2, 0x12,
	0xe1, 0x89, 0xde, 0x12, 0xfd, 0x75, 0xf3, 0x76, 0xa0, 0x3c, 0x21, 0x07, 0xf8, 0x09, 0x1c, 0x75,
	0xd7, 0xf1, 0x89, 0x9e, 0xdf, 0x78, 0x52, 0xbc, 0x5d, 0xb0, 0xd4, 0x7b, 0x0d, 0xdd, 0x62, 0xa5,
	0xf0, 0x71, 0x23, 0xb5, 0x7c, 0x3d, 0xbc, 0xed, 0x40, 0xc9, 0x2e, 0x76, 0xa3, 0xc9, 0xae, 0xf6,
	0xce, 0xdb, 0x0e, 0x48, 0xf6, 0x1b, 0xf8, 0xaf, 0x1c, 0x48, 0x3c, 0x6e, 0x19, 0x54, 0xb6, 0xf4,
	0x8e, 0x5b, 0x67, 0x98, 0x1c, 0xe0, 0x3b, 0xb0, 0xab, 0x19, 0x40, 0x4f, 0xcf, 0x54, 0x87, 0xcc,
	0x6b, 0xc5, 0xa4, 0xcc, 0x39, 0x58, 0xa2, 0x83, 0xf8, 0x48, 0xcf, 0x5a, 0x8f, 0x93, 0xb7, 0x2d,
	0x2c, 0x78, 0xd7, 0x5d, 0xf9, 0x9f, 0xf5, 0xf2, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0b, 0xf5,
	0x27, 0x83, 0xc9, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GRPCKeyStoreClient is the client API for GRPCKeyStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GRPCKeyStoreClient interface {
	// GenerateKey allows the key store to provide a key it has
	// generated.  This allows a key store to provide signing services
	//  and never divulge private key information.
	// (GenerateKey/AssociateKey is an alternative to AddKey)
	GenerateKey(ctx context.Context, in *GenerateKeyReq, opts ...grpc.CallOption) (*GenerateKeyRsp, error)
	// AssociateKey follows a successful GenerateKey.  It allows notary to
	// inform the key store or the KeyId that is associated with this key
	AssociateKey(ctx context.Context, in *AssociateKeyReq, opts ...grpc.CallOption) (*AssociateKeyRsp, error)
	// AddKey allows a key generated by Notary to be saved in the key store.
	// AddKey is an alternative to the GenerateKey/AssociateKey sequence.
	AddKey(ctx context.Context, in *AddKeyReq, opts ...grpc.CallOption) (*AddKeyRsp, error)
	// GetKey retrieves a stored public key from the key store
	GetKey(ctx context.Context, in *GetKeyReq, opts ...grpc.CallOption) (*GetKeyRsp, error)
	// ListKeys retrieves all keys available in the key store
	ListKeys(ctx context.Context, in *ListKeysReq, opts ...grpc.CallOption) (*ListKeysRsp, error)
	// RemoveKey removes a key from the keystore
	RemoveKey(ctx context.Context, in *RemoveKeyReq, opts ...grpc.CallOption) (*RemoveKeyRsp, error)
	// Sign a message with the specified key
	Sign(ctx context.Context, in *SignReq, opts ...grpc.CallOption) (*SignRsp, error)
}

type gRPCKeyStoreClient struct {
	cc *grpc.ClientConn
}

func NewGRPCKeyStoreClient(cc *grpc.ClientConn) GRPCKeyStoreClient {
	return &gRPCKeyStoreClient{cc}
}

func (c *gRPCKeyStoreClient) GenerateKey(ctx context.Context, in *GenerateKeyReq, opts ...grpc.CallOption) (*GenerateKeyRsp, error) {
	out := new(GenerateKeyRsp)
	err := c.cc.Invoke(ctx, "/grpckeystore.GRPCKeyStore/GenerateKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCKeyStoreClient) AssociateKey(ctx context.Context, in *AssociateKeyReq, opts ...grpc.CallOption) (*AssociateKeyRsp, error) {
	out := new(AssociateKeyRsp)
	err := c.cc.Invoke(ctx, "/grpckeystore.GRPCKeyStore/AssociateKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCKeyStoreClient) AddKey(ctx context.Context, in *AddKeyReq, opts ...grpc.CallOption) (*AddKeyRsp, error) {
	out := new(AddKeyRsp)
	err := c.cc.Invoke(ctx, "/grpckeystore.GRPCKeyStore/AddKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCKeyStoreClient) GetKey(ctx context.Context, in *GetKeyReq, opts ...grpc.CallOption) (*GetKeyRsp, error) {
	out := new(GetKeyRsp)
	err := c.cc.Invoke(ctx, "/grpckeystore.GRPCKeyStore/GetKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCKeyStoreClient) ListKeys(ctx context.Context, in *ListKeysReq, opts ...grpc.CallOption) (*ListKeysRsp, error) {
	out := new(ListKeysRsp)
	err := c.cc.Invoke(ctx, "/grpckeystore.GRPCKeyStore/ListKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCKeyStoreClient) RemoveKey(ctx context.Context, in *RemoveKeyReq, opts ...grpc.CallOption) (*RemoveKeyRsp, error) {
	out := new(RemoveKeyRsp)
	err := c.cc.Invoke(ctx, "/grpckeystore.GRPCKeyStore/RemoveKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCKeyStoreClient) Sign(ctx context.Context, in *SignReq, opts ...grpc.CallOption) (*SignRsp, error) {
	out := new(SignRsp)
	err := c.cc.Invoke(ctx, "/grpckeystore.GRPCKeyStore/Sign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GRPCKeyStoreServer is the server API for GRPCKeyStore service.
type GRPCKeyStoreServer interface {
	// GenerateKey allows the key store to provide a key it has
	// generated.  This allows a key store to provide signing services
	//  and never divulge private key information.
	// (GenerateKey/AssociateKey is an alternative to AddKey)
	GenerateKey(context.Context, *GenerateKeyReq) (*GenerateKeyRsp, error)
	// AssociateKey follows a successful GenerateKey.  It allows notary to
	// inform the key store or the KeyId that is associated with this key
	AssociateKey(context.Context, *AssociateKeyReq) (*AssociateKeyRsp, error)
	// AddKey allows a key generated by Notary to be saved in the key store.
	// AddKey is an alternative to the GenerateKey/AssociateKey sequence.
	AddKey(context.Context, *AddKeyReq) (*AddKeyRsp, error)
	// GetKey retrieves a stored public key from the key store
	GetKey(context.Context, *GetKeyReq) (*GetKeyRsp, error)
	// ListKeys retrieves all keys available in the key store
	ListKeys(context.Context, *ListKeysReq) (*ListKeysRsp, error)
	// RemoveKey removes a key from the keystore
	RemoveKey(context.Context, *RemoveKeyReq) (*RemoveKeyRsp, error)
	// Sign a message with the specified key
	Sign(context.Context, *SignReq) (*SignRsp, error)
}

func RegisterGRPCKeyStoreServer(s *grpc.Server, srv GRPCKeyStoreServer) {
	s.RegisterService(&_GRPCKeyStore_serviceDesc, srv)
}

func _GRPCKeyStore_GenerateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCKeyStoreServer).GenerateKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpckeystore.GRPCKeyStore/GenerateKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCKeyStoreServer).GenerateKey(ctx, req.(*GenerateKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCKeyStore_AssociateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssociateKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCKeyStoreServer).AssociateKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpckeystore.GRPCKeyStore/AssociateKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCKeyStoreServer).AssociateKey(ctx, req.(*AssociateKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCKeyStore_AddKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCKeyStoreServer).AddKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpckeystore.GRPCKeyStore/AddKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCKeyStoreServer).AddKey(ctx, req.(*AddKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCKeyStore_GetKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCKeyStoreServer).GetKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpckeystore.GRPCKeyStore/GetKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCKeyStoreServer).GetKey(ctx, req.(*GetKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCKeyStore_ListKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListKeysReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCKeyStoreServer).ListKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpckeystore.GRPCKeyStore/ListKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCKeyStoreServer).ListKeys(ctx, req.(*ListKeysReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCKeyStore_RemoveKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCKeyStoreServer).RemoveKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpckeystore.GRPCKeyStore/RemoveKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCKeyStoreServer).RemoveKey(ctx, req.(*RemoveKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCKeyStore_Sign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCKeyStoreServer).Sign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpckeystore.GRPCKeyStore/Sign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCKeyStoreServer).Sign(ctx, req.(*SignReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GRPCKeyStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpckeystore.GRPCKeyStore",
	HandlerType: (*GRPCKeyStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateKey",
			Handler:    _GRPCKeyStore_GenerateKey_Handler,
		},
		{
			MethodName: "AssociateKey",
			Handler:    _GRPCKeyStore_AssociateKey_Handler,
		},
		{
			MethodName: "AddKey",
			Handler:    _GRPCKeyStore_AddKey_Handler,
		},
		{
			MethodName: "GetKey",
			Handler:    _GRPCKeyStore_GetKey_Handler,
		},
		{
			MethodName: "ListKeys",
			Handler:    _GRPCKeyStore_ListKeys_Handler,
		},
		{
			MethodName: "RemoveKey",
			Handler:    _GRPCKeyStore_RemoveKey_Handler,
		},
		{
			MethodName: "Sign",
			Handler:    _GRPCKeyStore_Sign_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpckeystore.proto",
}
